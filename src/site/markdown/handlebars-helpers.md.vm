#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
${symbol_pound}${symbol_pound} CONGA - Custom Handlebars expressions

By using CONGA handlebars helper plugins it is possible to extend handlebars by registering custom expressions. Out of the box CONGA ships with a set of built-in custom expressions documented in this chapter. See [Extensibility model][extensibility] how to register you own helpers.

The basic handlebars expressions are documented in the [Handlebars quickstart][handlebars-quickstart].

You can also use the following helpers provided by [handlebars.java](https://github.com/jknack/handlebars.java):

* [StringHelpers](https://javadoc.io/static/com.github.jknack/handlebars/${project.properties['jknack.handlebars.version']}/com/github/jknack/handlebars/helper/StringHelpers.html)
* [ConditionalHelpers](https://javadoc.io/static/com.github.jknack/handlebars/${project.properties['jknack.handlebars.version']}/com/github/jknack/handlebars/helper/ConditionalHelpers.html)
* [AssignHelper](https://www.javadoc.io/static/com.github.jknack/handlebars-helpers/${project.properties['jknack.handlebars.version']}/com/github/jknack/handlebars/helper/AssignHelper.html)

Additionally, the CONGA AEM plugin provides a set of
[Custom Handlebars expressions for AEM][aem-handlebars-helpers].

${symbol_pound}${symbol_pound}${symbol_pound} regexQuote

To insert a variable expression and applying regex quoting on it:

```
{{regexQuote group1.param1}}
```


${symbol_pound}${symbol_pound}${symbol_pound} ifEquals

Conditional if statement - block is rendered if expression equals to an argument:

```
{{${symbol_pound}ifEquals group1.param1 "myValue"}}
  condition met block...
{{/ifEquals}}
```

${symbol_pound}${symbol_pound}${symbol_pound} ifNotEquals

Conditional if statement - block is rendered if expression unequals to
an argument:

```
{{${symbol_pound}ifNotEquals group1.param1 "myValue"}}
  condition met block...
{{/ifEquals}}
```

${symbol_pound}${symbol_pound}${symbol_pound} eachIf

Conditional for each loop - loop is generated if condition is true:

```
{{${symbol_pound}eachIf group1.list "group1.flag1"}},
  conditional loop block
{{/eachIf}}
```


${symbol_pound}${symbol_pound}${symbol_pound} eachIfEquals

Conditional for each loop - loop is generated if expression equals to an argument:

```
{{${symbol_pound}eachIfEquals group1.list "group1.param1" "myValue"}},
  conditional loop block
{{/eachIfEquals}}
```


${symbol_pound}${symbol_pound}${symbol_pound} contains

Checks for presence of a given value in a list:

```
{{${symbol_pound}contains group1.list1 "myValue"}}
  condition met block...
{{/contains}}
```


${symbol_pound}${symbol_pound}${symbol_pound} ensureProperties

Ensure that all properties with the given names are set. Build fails if this is not the case, the exception message contains the missing properties.

```
{{ensureProperties "group1.prop1" "group1.prop2"}}
```


${symbol_pound}${symbol_pound}${symbol_pound} disallowProperty

Ensure that the given property is *not* set/present. It fails with an error message, if it is present. Optionally, a custom error message can be defined via a second parameter.

```
{{ensureProperties "group1.prop1" "Property 'group1.prop1' is deprecated, please use 'XYZ' instead."}}
```



[handlebars-quickstart]: handlebars-quickstart.html
[extensibility]: extensibility.html
[aem-handlebars-helpers]: plugins/aem/handlebars-helpers.html
